name: Build Replication plugin
# This workflow is triggered on pull requests to main branch
on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - '*'

# We build for other platforms except linux which is already covered in build-and-test.
# Also, We're not running tests here as those are already covered with linux build.
jobs:
  Get-CI-Image-Tag:
    runs-on: ubuntu-latest
    outputs:
      ci-image-version-linux: ${{ steps.step-ci-image-version-linux.outputs.ci-image-version-linux }}
    steps:
      - name: Install crane
        uses: iarekylew00t/crane-installer@v1
        with:
          crane-release: v0.15.2
      - name: Checkout opensearch-build repository
        uses: actions/checkout@v2
        with:
          repository: 'opensearch-project/opensearch-build'
          ref: 'main'
          path: 'opensearch-build'
      - name: Get ci image version from opensearch-build repository scripts
        id: step-ci-image-version-linux
        run: |
          crane version
          CI_IMAGE_VERSION=`opensearch-build/docker/ci/get-ci-images.sh -p centos7 -u opensearch -t build | head -1`
          echo $CI_IMAGE_VERSION
          echo "ci-image-version-linux=$CI_IMAGE_VERSION" >> $GITHUB_OUTPUT

  Build-CCR-Linux:
    strategy:
      matrix:
        java: [11, 17]

    name: Build and Test CCR Plugin on Linux
    runs-on: ubuntu-latest
    needs: Get-CI-Image-Tag
    container:
      # using the same image which is used by opensearch-build team to build the OpenSearch Distribution
      # this image tag is subject to change as more dependencies and updates will arrive over time
      image: ${{ needs.Get-CI-Image-Tag.outputs.ci-image-version-linux }}
      # need to switch to root so that github actions can install runner binary on container without permission issues.
      options: --user root

    steps:
      - name: Checkout CCR
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Run build
        # switching the user, as OpenSearch cluster can only be started as root/Administrator on linux-deb/linux-rpm/windows-zip.
        run: |
          chown -R opensearch.opensearch `pwd`
          su opensearch -c "whoami && java -version && ./gradlew --refresh-dependencies clean release -D"build.snapshot=true" -x test -x IntegTest"

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    continue-on-error: true
    strategy:
      matrix:
        java:
          - 17
        os:
          - windows-latest
          - macos-latest
    # Job name
    name: Java ${{ matrix.java }} On ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      # This step uses the setup-java Github action: https://github.com/actions/setup-java
      - name: Set Up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      # This step uses the checkout Github action: https://github.com/actions/checkout
      - name: Checkout Branch
        uses: actions/checkout@v2
      - name: Build and run Replication tests
        run: |
          ./gradlew --refresh-dependencies clean release -D"build.snapshot=true" -x test -x IntegTest